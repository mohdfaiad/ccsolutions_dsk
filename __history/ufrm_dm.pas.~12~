unit ufrm_dm;

interface

uses
  System.SysUtils,
  System.Classes,
  System.IniFiles,

  Vcl.Dialogs,

  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.Phys.MySQL,
  FireDAC.Phys.MySQLDef,
  FireDAC.ConsoleUI.Wait,
  FireDAC.Comp.Client,
  FireDAC.Comp.UI,

  Data.DB,

  uDWAbout,
  uRESTDWPoolerDB;

type
  Tfrm_dm = class(TDataModule)
    database: TRESTDWDataBase;
    connDB: TFDConnection;
    waitCursor: TFDGUIxWaitCursor;
    driverLink: TFDPhysMySQLDriverLink;
    mamDB: TFDManager;
    procedure DataModuleCreate(Sender: TObject);
  private
    arqIni: TIniFile;

    arqIniServidorWBS: TIniFile;
    dir: String;

    CONST
      pasta           = 'config\';
      fileServidorWBS = 'swebservice.ini';

  public
    usuario_usr_token, usuario_usr_codigo: string;

  end;

var
  frm_dm: Tfrm_dm;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure Tfrm_dm.DataModuleCreate(Sender: TObject);
//var
//  arq: String;
begin
//  arq := 'C:\ccsolutions\config\webservice.ini';
//  try
//    try
//      arqIni := TIniFile.Create(arq);
//
//      if not (FileExists(arq)) then begin
//        arqIni.WriteString('WEBSERVICE_CLIENTE', 'CONTRATO', '');
//        arqIni.WriteString('WEBSERVICE_CLIENTE', 'USUARIO', edt_usuario.Text);
//      end;
//    except on E: Exception do
//      ShowMessage('Error: ' + E.Message);
//    end;
//  finally
//    FreeAndNil(arqIni);
//  end;
end;

end.
